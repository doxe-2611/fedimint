(function() {var type_impls = {
"fedimint_server":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FramedWrite%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Debug-for-FramedWrite%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for FramedWrite&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","fedimint_server::net::framed::FramedSink"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FramedWrite%3CT,+E%3E\" class=\"impl\"><a href=\"#impl-FramedWrite%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; FramedWrite&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the underlying I/O stream wrapped by\n<code>FramedWrite</code>.</p>\n<p>Note that care should be taken to not tamper with the underlying stream\nof data coming in as it may corrupt the stream of frames otherwise\nbeing worked with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the underlying I/O stream wrapped by\n<code>FramedWrite</code>.</p>\n<p>Note that care should be taken to not tamper with the underlying stream\nof data coming in as it may corrupt the stream of frames otherwise\nbeing worked with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_pin_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_pin_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut FramedWrite&lt;T, E&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a pinned mutable reference to the underlying I/O stream wrapped by\n<code>FramedWrite</code>.</p>\n<p>Note that care should be taken to not tamper with the underlying stream\nof data coming in as it may corrupt the stream of frames otherwise\nbeing worked with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_inner</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Consumes the <code>FramedWrite</code>, returning its underlying I/O stream.</p>\n<p>Note that care should be taken to not tamper with the underlying stream\nof data coming in as it may corrupt the stream of frames otherwise\nbeing worked with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoder\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">encoder</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;E</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the underlying encoder.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoder_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">encoder_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the underlying encoder.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_encoder\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map_encoder</a>&lt;C, F&gt;(self, map: F) -&gt; FramedWrite&lt;T, C&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; C,</div></h4></section></summary><div class=\"docblock\"><p>Maps the encoder <code>E</code> to <code>C</code>, preserving the write buffer\nwrapped by <code>Framed</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoder_pin_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">encoder_pin_mut</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut FramedWrite&lt;T, E&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the underlying encoder.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_buffer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">write_buffer</a>(&amp;self) -&gt; &amp;BytesMut</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the write buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_buffer_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">write_buffer_mut</a>(&amp;mut self) -&gt; &amp;mut BytesMut</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the write buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backpressure_boundary\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">backpressure_boundary</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns backpressure boundary</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_backpressure_boundary\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_backpressure_boundary</a>(&amp;mut self, boundary: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Updates backpressure boundary</p>\n</div></details></div></details>",0,"fedimint_server::net::framed::FramedSink"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FramedWrite%3CT,+E%3E\" class=\"impl\"><a href=\"#impl-FramedWrite%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; FramedWrite&lt;T, E&gt;<div class=\"where\">where\n    T: AsyncWrite,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(inner: T, encoder: E) -&gt; FramedWrite&lt;T, E&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>FramedWrite</code> with the given <code>encoder</code>.</p>\n</div></details></div></details>",0,"fedimint_server::net::framed::FramedSink"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sink%3CI%3E-for-FramedWrite%3CT,+E%3E\" class=\"impl\"><a href=\"#impl-Sink%3CI%3E-for-FramedWrite%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, E&gt; Sink&lt;I&gt; for FramedWrite&lt;T, E&gt;<div class=\"where\">where\n    T: AsyncWrite,\n    E: Encoder&lt;I&gt;,\n    &lt;E as Encoder&lt;I&gt;&gt;::Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = &lt;E as Encoder&lt;I&gt;&gt;::Error</h4></section></summary><div class='docblock'>The type of value produced by the sink when an error occurs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_ready\" class=\"method trait-impl\"><a href=\"#method.poll_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_ready</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut FramedWrite&lt;T, E&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;FramedWrite&lt;T, E&gt; as Sink&lt;I&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to prepare the <code>Sink</code> to receive a value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_send\" class=\"method trait-impl\"><a href=\"#method.start_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start_send</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut FramedWrite&lt;T, E&gt;&gt;,\n    item: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;FramedWrite&lt;T, E&gt; as Sink&lt;I&gt;&gt;::Error&gt;</h4></section></summary><div class='docblock'>Begin the process of sending a value to the sink.\nEach call to this function must be preceded by a successful call to\n<code>poll_ready</code> which returned <code>Poll::Ready(Ok(()))</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut FramedWrite&lt;T, E&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;FramedWrite&lt;T, E&gt; as Sink&lt;I&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Flush any remaining output from this sink. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_close\" class=\"method trait-impl\"><a href=\"#method.poll_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_close</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut FramedWrite&lt;T, E&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;FramedWrite&lt;T, E&gt; as Sink&lt;I&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Flush any remaining output and close this sink, if necessary. <a>Read more</a></div></details></div></details>","Sink<I>","fedimint_server::net::framed::FramedSink"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-FramedWrite%3CT,+D%3E\" class=\"impl\"><a href=\"#impl-Stream-for-FramedWrite%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, D&gt; Stream for FramedWrite&lt;T, D&gt;<div class=\"where\">where\n    T: Stream,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Item</a> = &lt;T as Stream&gt;::Item</h4></section></summary><div class='docblock'>Values yielded by the stream.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut FramedWrite&lt;T, D&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;FramedWrite&lt;T, D&gt; as Stream&gt;::Item&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to pull out the next value of this stream, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the stream is exhausted. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the stream. <a>Read more</a></div></details></div></details>","Stream","fedimint_server::net::framed::FramedSink"],["<section id=\"impl-Unpin-for-FramedWrite%3CT,+E%3E\" class=\"impl\"><a href=\"#impl-Unpin-for-FramedWrite%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'__pin, T, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for FramedWrite&lt;T, E&gt;<div class=\"where\">where\n    __Origin&lt;'__pin, T, E&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","fedimint_server::net::framed::FramedSink"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()