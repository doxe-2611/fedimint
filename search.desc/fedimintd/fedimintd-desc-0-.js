searchState.loadedDescShard("fedimintd", 0, "<code>fedimintd</code> builder\nComma separated list of additional secrets that can be …\nDefault Api secret that will be used to communicate with …\nOur API address for clients to connect to us\nAddress we bind to for exposing the API\nAddress we bind to for federation communication\nPath to folder containing federation config files\nList of default meta values to use during config …\nThe number of blocks the federation stays behind the …\nThe bitcoin network that fedimint will be running on\nOur external address for communicating with our peers\nPassword to encrypt sensitive config files\nEnable tokio console logging\nEnable telemetry logging\nDevelopment-related commands\n<code>fedimintd</code> builder\nList supported server API versions and exit\nList supported server database versions and exit\nTime we will wait before forcefully shutting down tasks\nComma separated list of additional secrets that can be …\nDefault Api secret that will be used to communicate with …\nOur API address for clients to connect to us\nAddress we bind to for exposing the API\nAddress we bind to for federation communication\nPath to folder containing federation config files\nList of default meta values to use during config …\nThe number of blocks the federation stays behind the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe bitcoin network that fedimint will be running on\nBuild a new <code>fedimintd</code>\nOur external address for communicating with our peers\nPassword to encrypt sensitive config files\nBlock thread and run a Fedimintd server\nEnable tokio console logging\nGet the version hash this <code>fedimintd</code> will report for …\nAttach default server modules to Fedimintd instance\nAttach additional module instance with parameters\nAttach a server module kind to the Fedimintd instance\nEnable telemetry logging\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")