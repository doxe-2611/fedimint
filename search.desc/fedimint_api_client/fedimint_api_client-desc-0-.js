searchState.loadedDescShard("fedimint_api_client", 0, "Tries to download the client config from the federation, …\nClient query system\nTries to download the client config only once.\nSet of api versions for each component (core + modules)\nAn extension trait allowing to making federation-wide API …\nAn API request error when calling an entire federation\nThe client in <code>FederationPeer</code>, that takes care of …\nSome data shared/preserved between <code>FederationPeerClient</code> and\nThe status of a server, including how it views its peers\n<code>IGlobalFederationApi</code> wrapping some <code>T: IRawFederationApi</code> …\nArchive of all the guardian config files that can be used …\nThe API for the global (non-module) endpoints\nTrait marker for the module (non-global) endpoints\nAn API (module or global) that can query a federation\nAn API request error when calling a single federation peer\nMint API client that will try to run queries against all …\nDuring config gen, used for an API-to-API call that adds a …\nList of all federation peers for the purpose of iterating …\nShow an audit across all modules\nCheck auth credentials\nSmall LRU used as <code>IGlobalFederationApi::await_block</code> cache.\nReturns the consensus config gen params, followers will …\nIndicates that this peer needs attention from the operator …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new API client from a client config\nDuring config gen, gets all the server connections we’ve …\nGets the default config gen params which can be configured …\nGet the general error if any.\nGet errors from different peers.\nLike <code>Self::await_session_lru</code>, but for …\nAfter DKG, returns the hash of the consensus config …\nDownload the guardian config to back it up\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWas the transaction rejected (which is final)\nCreates a new API client\nCreates a new API client\nThis should always be 0 if everything is okay, so a …\nReport errors that are worth reporting\nReport any errors\nMake request to a specific federation peer by <code>peer_id</code>\nMake request to a specific federation peer by <code>peer_id</code>\nMake a request to a single peer in the federation with an …\nLike <code>Self::request_single_peer</code>, but API more like …\nMake an aggregate request to federation, using <code>strategy</code> to …\nRuns DKG, can only be called once after configs have been …\nPeerId of the Guardian node, if set\nFetches the server consensus hash if enough peers agree on …\nDuring config gen, sets the server connection containing …\nLeader sets the consensus params, everyone sets the local …\nSets the password used to decrypt the configs and …\nReads the configs from the disk, starts the consensus …\nReturns the status of the server\nSubmit a transaction for inclusion\nUpdates local state and notify leader that we have …\nWait (if needed) before reconnection attempt based on …\nWait (if needed) + update reconnection stats\nDo nothing yet, keep waiting for requests\nFail the whole request\nReturns the first valid response. The response of a peer is\nReturns when a threshold of valid responses. The response …\nResults from the strategy handling a response from a peer\nFedimint query strategy\nRetry request to this peer\nReturn the successful result\nReturns when we obtain a threshold of identical responses\nQuery strategy that returns when enough peers responded or …\nReturns the deduplicated union of a threshold of …\nReturns the deduplicated union of <code>required</code> number of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the most common response that has been processed so …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStrategy for returning first response that is verifiable …\nShould requests for this strategy have specific timeouts?")