searchState.loadedDescShard("fedimint_metrics", 0, "An interface for encoding metric families into an …\nA <code>Metric</code> represents a single numerical value that can …\nA <code>Collector</code> that bundles a set of <code>Gauge</code>s that all share …\nA <code>Metric</code> counts individual observations from an event or …\nA <code>Collector</code> that bundles a set of Histograms that all …\nThe integer version of <code>Counter</code>. Provides better …\nThe integer version of <code>CounterVec</code>. Provides better …\nAn implementation of an <code>Encoder</code> that converts a …\n<code>encode</code> converts a slice of MetricFamily proto messages …\nConverts metrics to <code>String</code>.\nAppends metrics to a given <code>String</code> buffer.\n<code>format_type</code> returns target format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn count of all samples.\nReturn accumulated sum of all samples.\nCreate a <code>HistogramOpts</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a <code>LocalHistogram</code> for single thread usage.\nCreate a new text encoder.\nAdd a single observation to the <code>Histogram</code>.\nObserve execution time of a closure, in second.\nCreate an <code>Opts</code>.\nCreate a <code>Histogram</code> and registers to a custom registry.\nCreate an <code>IntCounterVec</code> and registers to a custom registry.\nReturn a <code>HistogramTimer</code> to track a duration.\n<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options.")