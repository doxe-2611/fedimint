searchState.loadedDescShard("fedimint_client", 0, "Client library\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nContains the error value\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nContains the success value\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nAllows adding state machines from inside a transition to …\nAdds a state machine to the executor.\nRe-exporting of everything from <code>fedimint_client_module</code>\nReturns a reference to the client’s federation API …\nModule-specific API\nRe-exporting of everything from <code>fedimint_client_module</code>\nAuthentication details\nWaits for an output from the primary module to reach its …\nWaits for outputs from the primary module to reach its …\nWaits for the transaction to be accepted or rejected as …\nRe-exporting of everything from <code>fedimint_client_module</code>\nPrepare an encrypted backup and send it to federation for …\nInitialize a client builder that can be configured to …\nThis function is mostly meant for internal use, you are …\nRe-exporting of everything from <code>fedimint_client_module</code>\nCreate a backup, include provided <code>metadata</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nModule-specific DB\nDownload most recent valid backup found from the Federation\nDownload most recent valid backup found from the Federation\nRe-exporting of everything from <code>fedimint_client_module</code>\nAdd funding and/or change to the transaction builder as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a transaction with the supplied output and funding …\nThis function is mostly meant for internal use, you are …\nBackup id derived from the root secret key (public key …\nBalance available to the client for spending\nReturns the config of the client in JSON format.\nGet metadata value from the federation config itself\nRe-exporting of everything from <code>fedimint_client_module</code>\nRegister to receiver all new transient (unpersisted) events\nRegister to receiver all new transient (unpersisted) events\nReturns the instance id of the first module of the given …\nReturns a reference to a typed module client instance by …\nBlocks till the client has synced the guardian public key …\nGet the meta manager to read meta fields.\nGet the client <code>Metadata</code>\nYou likely want to use <code>Client::get_peer_urls</code>. This …\nReturns a list of guardian API URLs\nInstance id of the module\nGet a reference to the module\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an invite code with the api endpoint of the given …\nJoin a new Federation\nRe-exporting of everything from <code>fedimint_client_module</code>\nGet the meta manager to read meta fields.\nRe-exporting of everything from <code>fedimint_client_module</code>\nReturned a reference client’s module API client, so that …\nRe-exporting of everything from <code>fedimint_client_module</code>\nGuardian’s own <code>peer_id</code>\nGet the primary module\nJoin a (possibly) previous joined Federation\nQuery the federation for API version support and then …\nRestart the client\nReturns the data from which the client’s root secret is …\nRe-exporting of everything from <code>fedimint_client_module</code>\nSet the client <code>Metadata</code>\nSet the client <code>Metadata</code>\nShutdown the client.\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nReturns a stream that yields the current client balance …\nSubscribe to recover progress for all the modules.\n<code>SupportedApiVersionsSummary</code> that the client and its …\nGet the <code>TaskGroup</code> that is tied to Client’s lifetime.\nRe-exporting of everything from <code>fedimint_client_module</code>\nReturns a stream of transaction updates for the given …\nUpload <code>backup</code> to federation\nValidate backup before sending it to federation\nWait for all module recoveries to finish\nBuild the <code>Client</code> with a custom wrapper around its api …\nMake module generator available when reading the config\nReplace module generator registry entirely\nUses this module with the given instance id as the primary …\n<strong>You are likely looking for </strong>…\nUses this module kind as the primary module if present in …\nEvent log event right after an api call\nEvent log event right before making an api call\nA wrapper over <code>IRawFederationApi</code> adding client side event …\nConvenience extension trait used for wrapping …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a list of all peers and their respective API URLs …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFetches API URL announcements from guardians, validates …\nClient state backup\nEncrypted version of <code>ClientBackup</code>.\nBackup metadata\n“32kiB is enough for any module backup” –dpc\nCreate empty metadata\nEncrypt with a key and turn into <code>EncryptedClientBackup</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate metadata as json from typed <code>val</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs metadata empty\nApplication metadata\nModule specific-backup (if supported)\nSession count taken right before taking the backup used to …\nAttempt to deserialize metadata as typed json\nAttempt to deserialize metadata as untyped json (…\nKey used to lookup operation log entries in chronological …\nDoes the client modules need to run recovery before being …\nClient metadata that will be stored/restored on …\n<code>ClientMigrationFn</code> is a function that modules can implement …\nClient initialization was complete\nAn iterator over the variants of DbKeyPrefix\nPrefixes between 0xb1..=0xcf shall all be considered …\nPrefixes between 0xb1..=0xcf shall all be considered …\nShould only be used with freshly generated root secret\nClient initialization mode\nLike <code>InitMode</code>, but without no longer required data.\nThe state of the client initialization\n0xd0.. reserved for Fedimint internal use\nLast valid backup the client attempted to make\nPer-module instance data\nClient data initialization might still require some work …\nShould be used with root secrets provided by the user to …\nArbitrary data of the applications integrating Fedimint …\n<code>apply_migrations_client</code> iterates from the on disk database …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReads all active states from the database and returns …\nReads all inactive states from the database and returns …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nMigrates a particular state by looping over all active and …\nPersists new active states by first removing all current …\nPersists new inactive states by first removing all current …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nDescribes a child key of a <code>DerivableSecret</code>\nA secret that can have child-subkey derived from it.\nDerive a federation-ID-based child key from self.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet derivation level\nDerive root secret key from a secret material and salt.\nbls12-381 keys are used for the guardians’ threshold …\nGenerate a pseudo-random byte array from the derivable …\nsecp256k1 keys are used for bitcoin deposit addresses, …\nMeta source can retry infinitely.\nMeta source should return fast, retry less. This blocks …\nLegacy non-meta module config source uses client config …\nService for managing the caching of meta fields.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value for the meta field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTries to parse <code>str_value</code> as JSON. In the special case that …\nNOTE: this subscription never ends even after update task …\nNOTE: this subscription never ends even after update task …\nWait for next change in this source.\nWait until Meta Service is initialized, after this …\nData stored in regular backups so that restoring doesn’t …\nA Client context for a <code>ClientModule</code> <code>M</code>\nA fedimint-client interface exposed to client modules\nA reference back to itself that the module cacn get from …\nFedimint module client\nCommon module types shared between client and server\nA final, fully initialized <code>crate::Client</code>\nType-erased version of <code>ClientModule</code>\nA contiguous range of input/output indexes\nData and API clients available to state machine …\nAll possible states this client can submit to the executor\nWaits for the funds from an output created by …\nSee <code>crate::Client::await_primary_module_outputs</code>\nCreates all inputs and outputs necessary to balance the …\nA set of all decoders of all modules of the client\nSee <code>crate::Client::finalize_and_submit_transaction</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the balance held by this module and available for …\nReturns an invite code for the federation that points to …\nGet a reference to a global Api handle\nReturns the fee the processing of this input requires.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nLeave the federation\nTurn a typed <code>ClientInputBundle</code> into a dyn version\nTurn a typed <code>ClientOutputBundle</code> into a dyn version\nTurn a <code>typed</code> into a dyn version\nTurn a typed input into a dyn version\nTurn a typed output into a dyn version\nThis method starts n state machines with given operation …\nReturns the fee the processing of this output requires.\nGet a reference back to client module from the <code>Self</code>\nInitialize client.\nReturns a stream that will output the updated module …\nDoes this module support being a primary module\nSee <code>crate::Client::transaction_updates</code>\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nGet the <code>ClientContext</code> for later use\nGet the <code>ClientContext</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the database migrations from the module to be …\nInitialize a <code>ClientModule</code> instance from its config\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecover the state of the client module, optionally from an …\nRun recover of a module from federation consensus history\nApi versions of the corresponding server side module’s …\nSee <code>ClientModuleInit::supported_api_versions</code>\n<code>ClientModuleInit</code> of this recovery logic.\nModule specific logic for …\nCommon state tracked during recovery from history\nDelete the recovery state from the database\nFinalize the recovery converting the tracked state to final\nReturns the argument unchanged.\nHandle transaction input, adjusting the current state\nHandle transaction output, adjusting the current state\nHandle session outcome, adjusting the current state\nHandle session outcome, adjusting the current state\nCalls <code>U::from(self)</code>.\nTry to load the existing state previously stored with …\nRead the finalization status\nNew empty state to start recovery from, and session number …\nCalled before <code>finalize_dbtx</code>, to allow final state changes …\nStore the current recovery state in the database\nStore finalization status\nA backup type for modules without a backup implementation. …\nProgress of the recovery\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJson value using string representation as db encoding.\nRepresents an operation triggered by a user, typically …\nV0 version of operation log entry for migration purposes\nEither a stream of operation updates if the operation hasn…\nWraps an operation update stream such that the last update …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a stream no matter if the operation is finished. …\nReturns the meta data of the operation. This is a JSON …\nReturns the kind of the module that generated the operation\nTries to set the outcome of an operation, but only logs an …\nReturns the last state update of the operation, if any was …\nReturns an a <code>UpdateStreamOrOutcome</code> enum that can be …\nReturns the time when the outcome was cached.\nReturns the last <code>limit</code> operations. To fetch the next page, …\nSets the outcome of an operation\nType representing the secret\nJust uses 64 random bytes and derives the secret from them\nTrait defining a way to generate, serialize and …\nDeserialization function for the external encoding\nSerialization function for the external encoding\nReturns the argument unchanged.\nConvenience function to derive fedimint-client root secret …\nCalls <code>U::from(self)</code>.\nRandom generation function for the external secret type\nConversion function from the external encoding to the …\nA transaction that acts as isolated for module code but …\nAdditional data made available to state machines of a …\nA shared context for a module client state machine\nA type-erased state of a state machine belonging to a …\nExecutor that drives forward state machines under its …\nBuilder to which module clients can be attached and used …\nObject-safe version of <code>State</code>\nAdditional resources made available in this module’s …\nState transition notifier for a specific module instance …\nState transition notifier owned by the modularized client …\nNotifier send handle that can be shared to places where we …\nImplementors act as state machines that can be executed\nRepresents one or multiple possible state transitions …\nAdds a number of state machines to the executor …\nAdds a number of state machines to the executor atomically …\nBuild <code>Executor</code> and spawn background task in <code>tasks</code> …\nCreates an <code>ExecutorBuilder</code>\nClone state\n<strong>Mostly used for testing</strong>\n<strong>Mostly used for testing</strong>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOnly meant for debug tooling\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>true</code> if this state allows no further transitions\nCreate a new notifier for a specific module instance that …\nReturns the isolated database transaction for the module.\nCreates a new <code>StateTransition</code> where the <code>trigger</code> future …\nReturns a reference to the <code>Notifier</code> that can be used to …\nNotify all subscribers of a state transition\nNotify all subscribers of a state transition\nOperation this state machine belongs to. See <code>OperationId</code> …\nOperation this state machine belongs to. See <code>OperationId</code> …\nCreate a <code>NotifierSender</code> handle that lets the owner trigger …\nStarts the background thread that runs the state machines. …\nStops the background task that runs the state machines.\nSubscribe to state transitions belonging to an operation …\nSubscribe to all state transitions belonging to the module …\nState transition function that, using the output of the …\nAll possible transitions from the current state to other …\nAll possible transitions from the state\nFuture that will block until a state transition is …\nAllow executor being built to run state machines …\nAllow executor being built to run state machines …\nAllow executor to build state machines associated with the …\nThe transaction has been accepted in consensus\nA group of inputs and state machines responsible for …\nThe transaction has been created and potentially already …\nA fake <code>sm::Context</code> for <code>NeverClientStateMachine</code>\nA fake <code>sm::State</code> that can actually never happen.\nThe transaction has been rejected by a quorum on submission\nReserved module instance id used for client-internal state …\nState machine to (re-)submit a transaction until it is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA version of <code>Self::new</code> for times where input does not …\nA version of <code>Self::new</code> for times where output does not …")